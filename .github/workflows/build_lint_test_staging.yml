name: Build - Lint - Test - Staging

on:
  push:
    branches: [staging]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn build

  lintCode:
    name: Run ESLint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn lint:code

  lintStyle:
    name: Run Stylelint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn lint:style

  lintFormat:
    name: Run Prettier
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn lint:format

  test:
    name: Run Unit tests
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn test

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    env:
      VERCEL_DEPLOYMENT_TOKEN: ${{ secrets.VERCEL_DEPLOYMENT_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    outputs:
      DEPLOYMENT_URL: ${{ steps.step1.outputs.DEPLOYMENT_URL }}

    steps:
      - uses: actions/checkout@v2
      - run: echo "DEPLOYMENT_URL=$(vercel -t $VERCEL_DEPLOYMENT_TOKEN -S thesoreon)" >> $GITHUB_ENV
      - run: vercel alias set $DEPLOYMENT_URL staging.frontendista.cz -t $VERCEL_DEPLOYMENT_TOKEN
      - id: step1
        run: echo "::set-output name=DEPLOYMENT_URL::$DEPLOYMENT_URL"

  e2e:
    name: Run E2E tests
    needs: [deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          config: pageLoadTimeout=10000,baseUrl=${{ needs.deploy.outputs.DEPLOYMENT_URL }}

  bundlediff:
    runs-on: ubuntu-latest
    needs: [build]

    steps:
      - uses: actions/checkout@v2

      - name: compressed-size-action
        uses: preactjs/compressed-size-action@v2
        with:
          pattern: "./.next/static/{chunks,css}/**/*.{js,css}"
          strip-hash: "\\b-[a-z0-9]{1,}\\b"
