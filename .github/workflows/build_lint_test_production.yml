name: Build - Lint - Test - Production

on:
  release:
    types: created

env:
  SANITY_CLIENT_TOKEN: ${{ secrets.SANITY_CLIENT_TOKEN }}
  SANITY_GRAPHQL_ENDPOINT: ${{ secrets.SANITY_GRAPHQL_ENDPOINT }}
  SANITY_PROJECT_ID: ${{ secrets.SANITY_PROJECT_ID }}
  SANITY_DATASET_ID: ${{ secrets.SANITY_DATASET_ID }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build:no:lint

  lintCode:
    name: Run ESLint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run ESLint
        run: pnpm lint:code

  lintStyle:
    name: Run Stylelint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Stylelint
        run: pnpm lint:style

  lintFormat:
    name: Run Prettier
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run Prettier
        run: pnpm lint:format

  test:
    name: Run Unit tests
    needs: [lintCode, lintStyle, lintFormat]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run tests
        run: pnpm test

  e2e:
    name: Run E2E tests
    needs: [test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          install: false
          build: pnpm build
          start: pnpm next start -p 3000
          config: pageLoadTimeout=10000,baseUrl=http://localhost:3000

  deploy:
    name: Deploy
    needs: [e2e]
    runs-on: ubuntu-latest

    env:
      VERCEL_DEPLOYMENT_TOKEN: ${{ secrets.VERCEL_DEPLOYMENT_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Deploy
        run: vercel --prod -t $VERCEL_DEPLOYMENT_TOKEN -S thesoreon
