name: Build - Lint - Test - Deploy

on:
  push:
    branches: [next]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn build

  lintCode:
    name: Run ESLint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn lint:code

  lintStyle:
    name: Run Stylelint
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn lint:style

  lintFormat:
    name: Run Prettier
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn lint:format

  test:
    name: Run Tests
    needs: [lintCode, lintStyle, lintFormat]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"

      - run: yarn install --frozen-lockfile --check-files
      - run: yarn test

  e2e:
    name: Run E2E
    needs: [lintCode, lintStyle, lintFormat]
    runs-on: ubuntu-latest

    steps:
      - run: echo TODO

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    env:
      VERCEL_DEPLOYMENT_TOKEN: ${{ secrets.VERCEL_DEPLOYMENT_TOKEN }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

    steps:
      - uses: actions/checkout@v2
      - run: vercel --prod -t $VERCEL_DEPLOYMENT_TOKEN -S thesoreon
